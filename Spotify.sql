-- MySQL Script generated by MySQL Workbench
-- Sat Jun  5 20:21:49 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema spotify
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spotify` DEFAULT CHARACTER SET utf8 ;
USE `spotify` ;

-- -----------------------------------------------------
-- Table `spotify`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre_usuario` VARCHAR(50) NOT NULL,
  `playlists_creadas` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`creador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`creador` (
  `id_usuario` INT NOT NULL,
  `pistas_creadas` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_creador_a_usuarios`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `spotify`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`pista`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`pista` (
  `id_pista` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `duracion` FLOAT NOT NULL DEFAULT 0,
  `pupularidad` INT NULL,
  `genero` VARCHAR(50) NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_pista`),
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_pista_a_creador`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `spotify`.`creador` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`reproduce`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`reproduce` (
  `id_pista` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_pista`, `id_usuario`),
  UNIQUE INDEX `id_pista_UNIQUE` (`id_pista` ASC) VISIBLE,
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_reproduce_a_pista`
    FOREIGN KEY (`id_pista`)
    REFERENCES `spotify`.`pista` (`id_pista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reproduce_a_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `spotify`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`playlist` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `cantidad_pistas` INT NOT NULL DEFAULT 0,
  `fecha_creacion` DATE NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_playlist`),
  UNIQUE INDEX `id_playlist_UNIQUE` (`id_playlist` ASC) VISIBLE,
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_a_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `spotify`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`tiene`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`tiene` (
  `id_playlist` INT NOT NULL,
  `id_pista` INT NOT NULL,
  PRIMARY KEY (`id_playlist`, `id_pista`),
  UNIQUE INDEX `id_playlist_UNIQUE` (`id_playlist` ASC) VISIBLE,
  UNIQUE INDEX `id_pista_UNIQUE` (`id_pista` ASC) VISIBLE,
  CONSTRAINT `fk_tiene_a_playlist`
    FOREIGN KEY (`id_playlist`)
    REFERENCES `spotify`.`playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tiene_a_pista`
    FOREIGN KEY (`id_pista`)
    REFERENCES `spotify`.`pista` (`id_pista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`podcast`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`podcast` (
  `id_pista` INT NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_pista`),
  UNIQUE INDEX `id_pista_UNIQUE` (`id_pista` ASC) VISIBLE,
  CONSTRAINT `fk_podcast_a_pista`
    FOREIGN KEY (`id_pista`)
    REFERENCES `spotify`.`pista` (`id_pista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`cancion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`cancion` (
  `id_pista` INT NOT NULL,
  PRIMARY KEY (`id_pista`),
  UNIQUE INDEX `id_pista_UNIQUE` (`id_pista` ASC) VISIBLE,
  CONSTRAINT `fk_cancion_a_pista`
    FOREIGN KEY (`id_pista`)
    REFERENCES `spotify`.`pista` (`id_pista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`consumidor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`consumidor` (
  `id_usuario` INT NOT NULL,
  `seguidores` INT NOT NULL DEFAULT 0,
  `seguidos` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `dk_consumidor_a_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `spotify`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`consumir`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`consumir` (
  `id_playlist` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_playlist`, `id_usuario`),
  UNIQUE INDEX `id_playlist_UNIQUE` (`id_playlist` ASC) VISIBLE,
  UNIQUE INDEX `id_usuario_UNIQUE` (`id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_consumir_a_playlist`
    FOREIGN KEY (`id_playlist`)
    REFERENCES `spotify`.`playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consumir_a_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `spotify`.`consumidor` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
